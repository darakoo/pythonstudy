[ch08 파이썬의 클래스] - [section16 클래스와 객체2] 

### 목차 ###
01. 생성자와 소멸자
	1. 생성자
	2. 소멸자
02. 클래스 메소드와 정적 메소드
	1. 클래스 변수
	2. 클래스 메소드
	3. 정적 메소드
03. 상속
	1. 상속이란?
	2. 상속 관계 구현
	3. 서브 클래스의 __inint__()
	4. 서브 클래스의 인스턴스 자료형

### MISSION ###
- 인스턴스를 생성할 때는 생성자가 자동으로 호출됩니다. 생성자 이름은 __init__입니다.
- 인스턴스가 소멸될 때는 소멸자가 자동으로 호출됩니다. 소멸자 이름은 __del__입니다.
- 클래스 변수는 해당 클래스를 기반으로 만든 모든 인스턴스가 공유할 수 있는 변수입니다. 
	인스턴스마다 생성되지 않고 클래스에 하나만 생성됩니다.
- 클래스 메소드는 인스턴스가 없어도 클래스를 이용해 호출할 수 있으며 cls를 이용해서 클래스 변수를 사용할 수 있습니다.
- 정적 메소드도 인스턴스 없이 클래스를 이용해서 호출할 수 있지만 cls를 사용할 수 없습니다.
- 상속을 이용하면 슈퍼 클래스의 기능을 사용하면서 추가 기능을 가지는 서브 클래스를 만들 수 있습니다.

### 상세 ###

상속(inheritance)
	1. 기존에 사용중인 클래스의 필드 중
	   새롭게 만들 클래스에서 필요한 것들이 있다면
	   상속을 받아서 그대로 사용한다.
	2. 여러 클래스를 선언할 때 중복되는 기능들이 존재한다면
	   공통 기능들을 담아놓을 클래스를 선언한다.

부모 클래스, 상위 클래스, 슈퍼 클래스, 기반 클래스 : 필드를 전달하는 쪽
자식 클래스, 하위 클래스, 서브 클래스, 파생 클래스 : 필드를 전달받는 쪽

상속 문법

class A :
	A필드

class B(A, C, D) :
	A, B필드

다중 상속
	부모 클래스가 한 개가 아닌 여러 개이다. 이러한 기법을 다중 상속이라고 한다.

모호성
	여러 부모의 필드 중 같은 이름의 필드를 자식 클래스에서 사용한다면,
	어느 부모의 필드인지 알 수가 없기 때문에 이러한 성질을 모호성이라고 한다.

생성자
	부모 클래스에 생성자가 선언되어 있고,
	자식 클래스에는 기본 생성자가 있다면 부모 클래스 생성자를
	자동으로 호출해준다. 하지만 자식 클래스에서 생성자를 직접 선언하면
	부모 생성자를 자식 생성자에서 직접 호출해 주어야 한다.


자식 클래스에 생성자가 있을 때
	부모에 있는 필드와 자식에서 필요한 필드가 있을 때
	부모 생성자를 호출하여 부모 필드를 초기화 해주고
	추가된 자식 필드를 추가로 초기화 해주어야 할 때

자식 클래스에 생성자가 없을 때(기본 생성자만 있을 때)
	부모의 필드 외에 추가적인 필드가 없을 때, 부모 생성자를
	그대로 사용한다.
--------------------------------------------------------------------------
다형성(polymorphism)
	재정의 : 부모 필드에서 수정하고 싶은 메소드는
		자식 필드에서 같은 이름으로 재선언 할 수 있다.

	항상 부모 생성자가 먼저 호출되어 부모 필드가 메모리에 할당된다.
	먼저 할당된 부모 필드에 a라는 메소드가 있다면, 나중에 할당되는
	자식 필드의 a메소드의 기능(소스코드의 주소값)으로 덮어 씌워 진다.
	data = 10 : 부모
	data = 20 : 자식
	print(data) == 20출력





















