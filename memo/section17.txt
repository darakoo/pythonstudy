[ch09 파이썬 예외 처리] - [section17 예외 처리] 

### 목차 ###
01. 예외 처리의 필요성
	1. 예외와 오류
	- 예외 : 개발자가 처리가능한 문제
	- 오류 : 개발자가 처리할 수 없는 문제

	2. 예외 처리의 필요성
	- 프로그램이 비정상적으로 종료되는 것을 막고 사용자에게 문제내용을 전달하기 위함이다.
	- ex) 웹사이트 오류 페이지 

02. 예외 처리
	1. 고전적인 예외처리
	- 프로그램 로직에서 처리하는 방식
	- 프로그램이 복잡해지고 모든 예외를 처리하기에는 한계가 있다.

	2. 예외의 종류
	- BaseException => Exception => 기타 예외클래스
	- 교재 p295 예외 클래스 종류 

	3. 예외 처리 방식 => 실습
		1) 모든 예외를 처리하는 방식
		2) 특정 예외만 처리하는 방식
		3) 예외 메시지 처리하기
		4) else문과 finally문

	4. 강제로 예외 발생시키기

	5. 사용자 예외 클래스
	

### MISSION ###
- try except문으로 파이썬의 모든 예외를 처리할 수 있습니다.
- try문에서 예외가 발생한다면 except문이 발생한 예외를 처리합니다.
- try문에서 예외가 발생하지 않는다면 else문이 실행됩니다.
- try문의 예외 발생 여부와 생관없이 마지막에는 항상 finally문이 실행됩니다.
- 파이썬에 존재하지 않는 예외인 경우에는 직접 Exception클래스를 상속받는 예외 클래스를 생성할 수 있습니다.

### 상세 ###

예외 처리
	에러 : 심각한 오류
	예외 : 덜 심각한 오류

try :
	오류가 발생할 수 있는 문장
except 오류 이름 as 객체:			// alias : 별칭
	오류 발생 시 실행할 문장

모든 예외 클래스의 부모 클래스는 Exception이다.
어떤 오류든지 상관없이 except로 처리할 때에는
"오류 이름" 자리에 예외의 최상위 부모인 Exception을 작성한다.
----------------------------------------------------------------------